cmake_minimum_required(VERSION 3.11)

# ---------------------------------------------------------------------
# Download and unpack googletest
configure_file(dependencies/gtest googletest-download/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
if(result)
  message(FATAL_ERROR "CMake step for googletest failed: ${result}")
endif()
execute_process(COMMAND ${CMAKE_COMMAND} --build .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
if(result)
  message(FATAL_ERROR "Build step for googletest failed: ${result}")
endif()
# ---------------------------------------------------------------------

set(EXECUTABLE_NAME tests)

project(${EXECUTABLE_NAME})

# Allows enabling code coverage
set(COVERAGE OFF CACHE BOOL "Coverage")
# Prevent overriding the parent project's compiler/linker settings on Windows
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)

include_directories(includes)

add_subdirectory(${CMAKE_BINARY_DIR}/googletest-src
                 ${CMAKE_BINARY_DIR}/googletest-build
                 EXCLUDE_FROM_ALL)

file(GLOB SOURCES "tests/*.cpp" "includes/*.hpp")

add_executable(${EXECUTABLE_NAME} ${SOURCES})

set_target_properties(${EXECUTABLE_NAME} PROPERTIES
    CXX_STANDARD 11
)

if (COVERAGE)
    target_compile_options(${EXECUTABLE_NAME}
      PRIVATE
        --coverage
        # -fno-inline
        # -fno-inline-small-functions
        # -fno-default-inline
        # -fkeep-inline-functions
        # -fkeep-static-functions
    )
    target_link_libraries(${EXECUTABLE_NAME}
      PRIVATE
        --coverage
        # -fno-inline
        # -fno-inline-small-functions
        # -fno-default-inline
        # -fkeep-inline-functions
        # -fkeep-static-functions
        gmock_main
    )
else()
    target_link_libraries(${EXECUTABLE_NAME} gmock_main)
endif()

make_directory(${CMAKE_BINARY_DIR}/outputs)

# ---------------------------------------------------------------------
# EOF